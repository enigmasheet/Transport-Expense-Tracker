// <auto-generated />
using System;
using ABCarriers.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ABCarriers.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ABCarriers.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Category__3213E83F13F8544B");

                    b.HasIndex(new[] { "Name" }, "UQ__Category__72E12F1BFEAB4084")
                        .IsUnique();

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("ABCarriers.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("invoice_no");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    b.Property<DateOnly>("Miti")
                        .HasColumnType("date")
                        .HasColumnName("miti");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int")
                        .HasColumnName("vendor_id");

                    b.HasKey("Id")
                        .HasName("PK__Invoice__3213E83F5F1A4E68");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LocationId");

                    b.HasIndex("VendorId");

                    b.HasIndex(new[] { "InvoiceNo" }, "UQ__Invoice__F58CA1E2FF83E40B")
                        .IsUnique();

                    b.ToTable("Invoice", (string)null);
                });

            modelBuilder.Entity("ABCarriers.Models.InvoiceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int")
                        .HasColumnName("invoice_id");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("quantity");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("rate");

                    b.Property<decimal?>("TaxableAmount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("taxable_amount");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total_amount");

                    b.Property<decimal?>("VatAmount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("vat_amount");

                    b.HasKey("Id")
                        .HasName("PK__InvoiceI__3213E83FE0FF9FBE");

                    b.HasIndex("CategoryId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceItems");
                });

            modelBuilder.Entity("ABCarriers.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Location__3213E83F1153567F");

                    b.HasIndex(new[] { "Name" }, "UQ__Location__72E12F1B5F46E249")
                        .IsUnique();

                    b.ToTable("Location", (string)null);
                });

            modelBuilder.Entity("ABCarriers.Models.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contact")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("contact");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("VatNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("vat_no");

                    b.HasKey("Id")
                        .HasName("PK__Vendor__3213E83FFA892102");

                    b.HasIndex("LocationId");

                    b.HasIndex(new[] { "VatNo" }, "UQ__Vendor__B444FCAA6FAFD8C3")
                        .IsUnique();

                    b.ToTable("Vendor", (string)null);
                });

            modelBuilder.Entity("ABCarriers.Models.Invoice", b =>
                {
                    b.HasOne("ABCarriers.Models.Category", "Category")
                        .WithMany("Invoices")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Invoice__categor__498EEC8D");

                    b.HasOne("ABCarriers.Models.Location", "Location")
                        .WithMany("Invoices")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Invoice__locatio__489AC854");

                    b.HasOne("ABCarriers.Models.Vendor", "Vendor")
                        .WithMany("Invoices")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Invoice__vendor___47A6A41B");

                    b.Navigation("Category");

                    b.Navigation("Location");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("ABCarriers.Models.InvoiceItem", b =>
                {
                    b.HasOne("ABCarriers.Models.Category", "Category")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__InvoiceIt__categ__4D5F7D71");

                    b.HasOne("ABCarriers.Models.Invoice", "Invoice")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__InvoiceIt__invoi__4C6B5938");

                    b.Navigation("Category");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("ABCarriers.Models.Vendor", b =>
                {
                    b.HasOne("ABCarriers.Models.Location", "Location")
                        .WithMany("Vendors")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Vendor__location__43D61337");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ABCarriers.Models.Category", b =>
                {
                    b.Navigation("InvoiceItems");

                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("ABCarriers.Models.Invoice", b =>
                {
                    b.Navigation("InvoiceItems");
                });

            modelBuilder.Entity("ABCarriers.Models.Location", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Vendors");
                });

            modelBuilder.Entity("ABCarriers.Models.Vendor", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
